extends layout

block content
  header.w3-container(style='padding-top:22px')
    h5.w3-left #{choralInfo.name}

  .w3-row-padding.w3-margin-bottom
    ul.nav.nav-tabs.graph-tabs
      - for( var i = 0; i < tabs.length; i++ )
        - active = (i === 0 ? 'active' : '')
        li(class=active)
          a(data-toggle="tab" href="#"+tabs[i] )= tabs[i]

    div.tab-content
      - for( var i = 0; i < tabs.length; i++ )
        - active = (i === 0 ? 'active in' : '')
        div.tab-pane.fade(class=active id= tabs[i])
          div.choral-chart.epoch.category10(id= "areaChart"+tabs[i] style="width: 900px; height: 200px")

  script.
    document.addEventListener("DOMContentLoaded", function(event) {
      var tabTitles = !{JSON.stringify(tabs)};
      var past = !{JSON.stringify(pastData)};
      var choralInfo = !{JSON.stringify(choralInfo)};
      var sampleRate = choralInfo.sampleRate;
      var chartsData = {};
      window.charts = {};
      for( var i = 0; i < tabTitles.length; i++ ) {
        chartsData[tabTitles[i]] = [
          {
            label: tabTitles[i],
            values: past[tabTitles[i]]
          }
        ];
        var windowSize = 3600/sampleRate;
        window.charts[tabTitles[i]] = $('#areaChart'+tabTitles[i]).epoch({
          type: 'time.line',
          data: chartsData[tabTitles[i]],
          axes: ['left','bottom','right'],
          historySize: windowSize,
          windowSize: windowSize,
          //1 tick every X data points
          // should be windowsize/(#ticks we want)
          tickFormats: { bottom: function(d) {
              var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
              var date = new Date(d*1000);
              var date_month = date.getMonth() + 1;
              var date_day = date.getDate();
              var date_hour = date.getHours();
              var ampm = date_hour < 12 ? "am" : "pm";
              date_hour = date.getHours() < 12 ? date_hour : date_hour % 12;
              if (date_hour == 0) date_hour = 12;
              var date_minute = date.getMinutes();
              if (date_minute < 10) date_minute = "0" + date_minute;
              return months[date_month] + ' ' + date_day + ' ' + date_hour + ':' + date_minute + ampm;
            }
          },
          ticks: { time: windowSize/5 },
        });
      }

      var socket = io.connect('//'+document.location.hostname+':'+document.location.port);
      socket.on('chartData', function (jsonString) {
        var data = JSON.parse(jsonString);
        for( var key in data.device_data ) {
          if( window.charts.hasOwnProperty(key) ) {
            window.charts[key].push([{
              time: data.device_timestamp/1000,
              y: data.device_data[key]
            }]);
          }
        }
      });
      socket.emit('subscribeToID', { choralId: '#{parentChoralId}' });
      socket.on('ackConnect', function (data) {
        console.log(data);
      });
    });
